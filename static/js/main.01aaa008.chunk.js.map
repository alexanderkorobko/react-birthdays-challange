{"version":3,"sources":["components/Employee.jsx","components/LetterArea.jsx","components/BirthdayItem.jsx","components/BirthdayList.jsx","App.js","index.js"],"names":["Employee","props","useState","active","setActive","firstName","lastName","id","dob","cb","handleFilter","event","className","name","type","checked","onChange","LetterArea","letter","employees","map","e","BirthdayItem","month","cur","Date","getMonth","bDate","slice","getDate","getFullYear","BirthdayList","listt","sortedMonths","employeesData","find","emp","neededMonths","d","bMonthNumber","m","i","includes","indexOf","App","setEmployees","activeList","setActiveList","toggleActive","prev","filter","useEffect","axios","get","then","res","data","l","suitableEmployees","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01aaa008.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nfunction Employee(props) {\n  const [active, setActive] = useState(false);\n  const { firstName, lastName, dob, id, cb } = props;\n\n  const handleFilter = (event) => {\n    active ? setActive(false) : setActive(true);\n    cb(id);\n  };\n\n  return (\n    <div>\n      <h3 className={active ? \"colored\" : null}>\n        {lastName} {firstName}\n      </h3>\n      <label>\n        <input\n          name={id}\n          type=\"radio\"\n          checked={active === false}\n          onChange={handleFilter}\n        />\n        <span>Not active</span>\n      </label>\n      <br />\n      <label>\n        <input\n          name={id}\n          type=\"radio\"\n          onChange={handleFilter}\n          checked={active === true}\n        />\n        <span>Active</span>\n      </label>\n    </div>\n  );\n}\n\nexport default Employee;\n","import Employee from \"./Employee\";\n\nfunction LetterArea(props) {\n  const { letter, employees, cb } = props;\n\n  return (\n    <div>\n      <h2>{letter}</h2>\n      <div>\n        {employees[0] ? (\n          employees.map((e) => <Employee key={e.id} {...e} cb={cb} />)\n        ) : (\n          <span>-----</span>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default LetterArea;\n","function BirthdayItem(props) {\n  const { firstName, lastName, dob, id } = props;\n\n  const month = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  var cur = new Date().getMonth();\n\n  var sortedMonths = [...month.slice(cur), ...month.slice(0, cur)];\n\n  const bDate = new Date(dob);\n\n  return (\n    <li>\n      {firstName} {lastName} - {bDate.getDate()} {month[bDate.getMonth()]}{\" \"}\n      {bDate.getFullYear()} year\n    </li>\n  );\n}\n\nexport default BirthdayItem;\n","import BirthdayItem from \"./BirthdayItem\";\n\nfunction BirthdayList(props) {\n  const { employees, listt } = props;\n\n  const month = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  let cur = new Date().getMonth();\n\n  const sortedMonths = [...month.slice(cur), ...month.slice(0, cur)];\n\n  let employeesData = listt.map((e) => {\n    const newItem = employees.find((emp) => emp.id === e);\n    return newItem;\n  });\n\n  const neededMonths = employeesData.map((d) => {\n    const bMonthNumber = new Date(d.dob).getMonth();\n    return month[bMonthNumber];\n  });\n\n  return (\n    <div className=\"b-list\">\n      {listt[0] ? (\n        <div>\n          {sortedMonths.map((m, i) => {\n            if (neededMonths.includes(m)) {\n              return (\n                <div key={m}>\n                  <h3>{m}</h3>\n\n                  {employeesData.map((e, i) => {\n                    const bMonth = new Date(e.dob).getMonth();\n\n                    if (bMonth === month.indexOf(m)) {\n                      return <BirthdayItem key={e.id} {...e} />;\n                    } else {\n                      return null;\n                    }\n                  })}\n                </div>\n              );\n            } else {\n              return null;\n            }\n          })}\n        </div>\n      ) : (\n        <h3> Employees List is empty</h3>\n      )}\n    </div>\n  );\n}\n\nexport default BirthdayList;\n","import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport LetterArea from \"./components/LetterArea\";\nimport Employee from \"./components/Employee\";\nimport BirthdayList from \"./components/BirthdayList\";\n\nfunction App() {\n  const [employees, setEmployees] = useState([]);\n  const [activeList, setActiveList] = useState([]);\n  const alphabet = [\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"G\",\n    \"H\",\n    \"I\",\n    \"J\",\n    \"K\",\n    \"L\",\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",\n    \"U\",\n    \"V\",\n    \"W\",\n    \"X\",\n    \"Y\",\n    \"Z\",\n  ];\n\n  function toggleActive(id) {\n    if (activeList.indexOf(id) !== -1) {\n      setActiveList((prev) => {\n        return prev.filter((e) => e !== id);\n      });\n    } else {\n      setActiveList((prev) => {\n        return [...prev, id];\n      });\n    }\n  }\n\n  useEffect(() => {\n    axios\n      .get(\"https://yalantis-react-school-api.yalantis.com/api/task0/users\")\n      .then((res) => setEmployees(res.data));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"abc\">\n        {alphabet.map((l) => {\n          const suitableEmployees = employees.filter(\n            (e) => e.lastName[0] === l\n          );\n          // const suitableEmployeesList=suitableEmployees.map(emp=><Employee key={emp.id} {...emp} />);\n          return (\n            <LetterArea\n              letter={l}\n              key={l}\n              employees={suitableEmployees}\n              cb={toggleActive}\n            />\n          );\n        })}\n      </div>\n\n      <BirthdayList employees={employees} listt={activeList} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}